name: CI

on:
  push:
    branches:
      - '**'
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - uses: actions/checkout@v3

      - name: Install LLVM 20 with clang-format and clang-tidy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg software-properties-common
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 20 all
          sudo update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-20 100
          sudo update-alternatives --install /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-20 100

      - name: Make lint script executable
        run: chmod +x scripts/lint.sh

      - name: Run lint script
        run: ./scripts/lint.sh

  build-test-cpu:
    name: Build and test on CPU
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install deps
        run: sudo apt-get update && sudo apt-get install -y cmake g++

      - name: Build on CPU
        run: |
          mkdir -p build && cd build
          cmake .. -DUSE_CUDA=OFF
          cmake --build .

      - name: Run unit tests on CPU
        run: cd build && ctest --output-on-failure

  build-test-gpu:
    name: Build and test on GPU
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: lint
    runs-on: ubuntu-22-gpu
    steps:
      - uses: actions/checkout@v3

      - name: Verify CUDA setup
        run: |
          nvidia-smi
          nvcc --version

      - name: Install deps
        run: sudo apt-get update && sudo apt-get install -y cmake g++

      - name: Build (CUDA)
        run: |
          mkdir -p build && cd build
          cmake .. -DUSE_CUDA=ON
          cmake --build .

      - name: Run Unit Tests (GPU)
        run: cd build && ctest --output-on-failure
